# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '0 0 */1 * *'

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    runs-on: ubuntu-latest
    #concurrency: python-build - ensures only a single job or workflow using the same concurrency group will run at a time

    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ] #Final is not supported in 3.7
        arch: [ x64, arm, arm64 ]
        os: [ ubuntu-latest,macos-latest,windows-latest ]

    env:
      CGID: python_package-${{matrix.os}}-${{matrix.arch}}


    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }} on ${{matrix.os}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          python -m pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Cache Pytest
        id: cache-pytest
        uses: actions/cache@v3
        with:
          path: |
            .pytest_cache
            pytest_cache
          key: python-package-${{ runner.os }}-${{matrix.python-version}}-${{hashFiles('test_*.py')}}.pytest_cache

      - name: Test with pytest cached
        continue-on-error: true
        run: |
          pytest

      - name: Test with pytest
        run: |
          pytest -p no:cacheprovider 
